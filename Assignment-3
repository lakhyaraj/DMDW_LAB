{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Assignment-3","provenance":[],"authorship_tag":"ABX9TyNmts/4yCfy7rArgAteACf+"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"afXmWf8EB2oj","executionInfo":{"status":"ok","timestamp":1606822756203,"user_tz":-330,"elapsed":1502,"user":{"displayName":"lakhyaraj behera","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgApcMknpe6y020Sw-B3Rtn9-atf6i2VA8S0Y7I=s64","userId":"05163506696344788468"}}},"source":["import numpy as np\n","from matplotlib import pyplot as plt"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"id":"PhaGDD4tCZEe","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1606822761422,"user_tz":-330,"elapsed":1497,"user":{"displayName":"lakhyaraj behera","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgApcMknpe6y020Sw-B3Rtn9-atf6i2VA8S0Y7I=s64","userId":"05163506696344788468"}},"outputId":"5a35578d-9d92-44cb-8bf5-82c7ebb4fe26"},"source":["x=np.arange(1,11)\n","x"],"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])"]},"metadata":{"tags":[]},"execution_count":2}]},{"cell_type":"code","metadata":{"id":"NIjgcP8aCbEs","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1606822765116,"user_tz":-330,"elapsed":1632,"user":{"displayName":"lakhyaraj behera","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgApcMknpe6y020Sw-B3Rtn9-atf6i2VA8S0Y7I=s64","userId":"05163506696344788468"}},"outputId":"d2e7c88c-6a80-470c-c9f7-b26626725cba"},"source":["y=2*x\n","y"],"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 2,  4,  6,  8, 10, 12, 14, 16, 18, 20])"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"code","metadata":{"id":"N5mQdvjrCfI8","executionInfo":{"status":"ok","timestamp":1606822768128,"user_tz":-330,"elapsed":1532,"user":{"displayName":"lakhyaraj behera","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgApcMknpe6y020Sw-B3Rtn9-atf6i2VA8S0Y7I=s64","userId":"05163506696344788468"}}},"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as pt"],"execution_count":4,"outputs":[]},{"cell_type":"code","metadata":{"id":"LCCzhlYaChI0"},"source":["plt.plot(x,y)\n","plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"XuWC9MePCjc1","executionInfo":{"status":"ok","timestamp":1606822771698,"user_tz":-330,"elapsed":1510,"user":{"displayName":"lakhyaraj behera","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgApcMknpe6y020Sw-B3Rtn9-atf6i2VA8S0Y7I=s64","userId":"05163506696344788468"}}},"source":["import pandas as pd \n","import matplotlib.pyplot as plt \n","\n","data = [['E001', 'M', 34, 123, 'Normal', 350], \n","\t\t['E002', 'F', 40, 114, 'Overweight', 450], \n","\t\t['E003', 'F', 37, 135, 'Obesity', 169], \n","\t\t['E004', 'M', 30, 139, 'Underweight', 189], \n","\t\t['E005', 'F', 44, 117, 'Underweight', 183], \n","\t\t['E006', 'M', 36, 121, 'Normal', 80], \n","\t\t['E007', 'M', 32, 133, 'Obesity', 166], \n","\t\t['E008', 'F', 26, 140, 'Normal', 120], \n","\t\t['E009', 'F', 32, 133, 'Normal', 75], \n","    ['E010', 'M', 36, 133, 'Underweight', 40]] \n","\n"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"id":"uje7xX4LCmtk","colab":{"base_uri":"https://localhost:8080/","height":365},"executionInfo":{"status":"ok","timestamp":1606822776131,"user_tz":-330,"elapsed":1680,"user":{"displayName":"lakhyaraj behera","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgApcMknpe6y020Sw-B3Rtn9-atf6i2VA8S0Y7I=s64","userId":"05163506696344788468"}},"outputId":"8e0c5902-ad3c-4de6-d889-4b45d79ccfc7"},"source":["df = pd.DataFrame(data,columns = ['EMPID','Gender','Age','Sales','BMI','Income'])\n","df.hist()"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7fd8dad62400>,\n","        <matplotlib.axes._subplots.AxesSubplot object at 0x7fd8dad3d7b8>],\n","       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fd8dacf4a20>,\n","        <matplotlib.axes._subplots.AxesSubplot object at 0x7fd8daca6c88>]],\n","      dtype=object)"]},"metadata":{"tags":[]},"execution_count":6},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 4 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"FRNODewICpNU","executionInfo":{"status":"ok","timestamp":1606822782418,"user_tz":-330,"elapsed":1638,"user":{"displayName":"lakhyaraj behera","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgApcMknpe6y020Sw-B3Rtn9-atf6i2VA8S0Y7I=s64","userId":"05163506696344788468"}}},"source":["import numpy as np \n","import pandas as pd \n","import matplotlib.pyplot as plt \n","import seaborn as sns"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZoI63b-0CrlO","colab":{"base_uri":"https://localhost:8080/","height":320},"executionInfo":{"status":"error","timestamp":1606822788199,"user_tz":-330,"elapsed":2084,"user":{"displayName":"lakhyaraj behera","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgApcMknpe6y020Sw-B3Rtn9-atf6i2VA8S0Y7I=s64","userId":"05163506696344788468"}},"outputId":"77fd4a6f-b735-4114-f777-d9a023630be4"},"source":["a=sns.load_dataset(\"flights\")\n","sns.relplot(x=\"passangers\",y=\"month\", hue=\"year\",date=a)"],"execution_count":8,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-8-64345f293230>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0ma\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mload_dataset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"flights\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrelplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"passangers\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"month\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhue\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"year\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mdate\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/seaborn/_decorators.py\u001b[0m in \u001b[0;36minner_f\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     44\u001b[0m             )\n\u001b[1;32m     45\u001b[0m         \u001b[0mkwargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0marg\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0marg\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mzip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mparameters\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 46\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     47\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0minner_f\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     48\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/seaborn/relational.py\u001b[0m in \u001b[0;36mrelplot\u001b[0;34m(x, y, hue, size, style, data, row, col, col_wrap, row_order, col_order, palette, hue_order, hue_norm, sizes, size_order, size_norm, markers, dashes, style_order, legend, kind, height, aspect, facet_kws, units, **kwargs)\u001b[0m\n\u001b[1;32m    934\u001b[0m         \u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    935\u001b[0m         \u001b[0mvariables\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mplotter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_semantics\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlocals\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 936\u001b[0;31m         \u001b[0mlegend\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlegend\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    937\u001b[0m     )\n\u001b[1;32m    938\u001b[0m     \u001b[0mp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmap_hue\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpalette\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpalette\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0morder\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mhue_order\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnorm\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mhue_norm\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/seaborn/relational.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data, variables, x_bins, y_bins, estimator, ci, n_boot, alpha, x_jitter, y_jitter, legend)\u001b[0m\n\u001b[1;32m    578\u001b[0m         )\n\u001b[1;32m    579\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 580\u001b[0;31m         \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__init__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvariables\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mvariables\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    581\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    582\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0malpha\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0malpha\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/seaborn/_core.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data, variables)\u001b[0m\n\u001b[1;32m    602\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__init__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvariables\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    603\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 604\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0massign_variables\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvariables\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    605\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    606\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mvar\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcls\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_semantic_mappings\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/seaborn/_core.py\u001b[0m in \u001b[0;36massign_variables\u001b[0;34m(self, data, variables)\u001b[0m\n\u001b[1;32m    666\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minput_format\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"long\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    667\u001b[0m             plot_data, variables = self._assign_variables_longform(\n\u001b[0;32m--> 668\u001b[0;31m                 \u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mvariables\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    669\u001b[0m             )\n\u001b[1;32m    670\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/seaborn/_core.py\u001b[0m in \u001b[0;36m_assign_variables_longform\u001b[0;34m(self, data, **kwargs)\u001b[0m\n\u001b[1;32m    885\u001b[0m                     \u001b[0;31m# We don't know what this name means\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    886\u001b[0m                     \u001b[0merr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34mf\"Could not interpret value `{val}` for parameter `{key}`\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 887\u001b[0;31m                     \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0merr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    888\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    889\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: Could not interpret value `year` for parameter `hue`"]}]},{"cell_type":"code","metadata":{"id":"gADquentCuDF","executionInfo":{"status":"ok","timestamp":1606822794452,"user_tz":-330,"elapsed":1736,"user":{"displayName":"lakhyaraj behera","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgApcMknpe6y020Sw-B3Rtn9-atf6i2VA8S0Y7I=s64","userId":"05163506696344788468"}}},"source":["from scipy import stats"],"execution_count":9,"outputs":[]},{"cell_type":"code","metadata":{"id":"QMKpqr1mCxAN","executionInfo":{"status":"ok","timestamp":1606822797866,"user_tz":-330,"elapsed":1431,"user":{"displayName":"lakhyaraj behera","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgApcMknpe6y020Sw-B3Rtn9-atf6i2VA8S0Y7I=s64","userId":"05163506696344788468"}}},"source":["c = np.random.normal(loc=5, size=100, scale=2)"],"execution_count":10,"outputs":[]}]}